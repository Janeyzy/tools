#generate report of memory
import sys
import matplotlib.pyplot as plt
from pylab import *

#get memory list which was generated by adb shell procrank


def getprocranklistuss(dumpfile_log, processname):
    listuss = []
    dumpfile_log.strip()
    processname.strip()
    #print('getprocranklistuss begin')
    fileobject = open(dumpfile_log)
    for line in fileobject:
        line = line.strip()
        if line == "":
            continue
        line = ' '.join(line.split())
        if processname in line:
            sztokenlist = line.split(' ')
            #print(sztokenlist)
            ussItem = sztokenlist[4].strip('Kk')
            listuss.append(ussItem)
            #print(ussItem)
    #print(listuss)
    fileobject.close()
    return listuss

def getextramemlist(dumpfile_log):
    listuss = []
    dumpfile_log.strip()
    #print('getextramemlist begin')
    fileobject = open(dumpfile_log)
    for line in fileobject:
        line = line.strip()
        if line == "":
            continue
        sztokenlist = line.split(' ')
        ussItem = sztokenlist[0].strip('Kk')
        listuss.append(ussItem)
            #print(ussItem)
    #print(listuss)
    fileobject.close()
    return listuss

if __name__ == '__main__':
    cameratotal_dump = sys.argv[1].strip()
    mediaservertotal_dump = sys.argv[2].strip()
    extramemtotal_dump =  sys.argv[3].strip()
    report = sys.argv[4].strip()

    print('analyseUssDate begin')
    listCameraMem = getprocranklistuss(cameratotal_dump, 'com.oppo.camera')
    listMediaServer = getprocranklistuss(mediaservertotal_dump, 'system/bin/mediaserver')
    listExtraMem = getextramemlist(extramemtotal_dump)
    #ax = plt.subplots()
    #plt.plot(listCameraMem, 'k--', color='g', label='com.oppo.camera')
    plt.plot(listCameraMem, color='k', label='com.oppo.camera')
    plt.plot(listMediaServer, color='r', label='mediaserver')
    plt.plot(listExtraMem, color='g', label='extramem')
    legend = plt.legend(loc='upper center', shadow=True)
    plt.ylabel('mem usage')
    plt.ylabel('time')
    grid(True)
    #plt.legend([plotCamera, plotMediaserver], ('red line, ’greenline’),’best' ,1);
    plt.savefig(report)
    #plt.show()
